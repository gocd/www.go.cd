---
title: GoCD plugins
title_tag_of_header: "Community - Plugins | GoCD"
meta_description: "GoCD is open source continuous delivery software. This is the list of bundled as well as other available plugins contributed by the community."
meta_keywords: "GoCD, continuous delivery, continuous delivery software, continuous integration, continuous integration software, go, goforcd, open source, contribute, resources, community repository plugins, task plugins, repository poller, packaged repository, yum repository, debain repository, npm repository"
---
<div class="inner-banner plugins">
  <div class="container">
    <h1 class="caption"><span>Plugins</span></h1>
  </div>
</div>

<main>
  <div class="container">
    <div class="row plugin-content">
      <div class="col-md-12">
        <p>
          Below is a list of currently supported plugins for GoCD. These include plugins contributed by the community
          (that are not bundled with the GoCD Server). Please refer
          the <a href="https://docs.go.cd/current/extension_points/plugin_user_guide.html">plugin user
          guide</a> to know more about plugin
          installation etc.
        </p>

        <p>
          If there is a plugin that you want but do not see, write your own using
          the <a href="https://developer.go.cd/current/writing_go_plugins/go_plugins_basics.html">GoCD plugin
          API</a>. Let us know if you are working on a plugin, and we will include it on this page.
        </p>

        <p>
          More information about creating plugins… GoCD has extension points for which plugins can be created.  An
          extension point defines the interface and the lifecycle that governs the respective plugin. At present only
          java-based extension points and plugins are supported by GoCD. Details about available extension points and
          their lifecycle can be obtained
          from <a href="https://developer.go.cd/current/writing_go_plugins/go_plugins_basics.html">GoCD plugin API
          documentation</a>.
        </p>
      </div>
    </div>

    <p>
      <em>Officially maintained ThoughtWorks plugins are tagged with a <%= image_tag "go-logo-small.png" , :class => "go-tag", :alt => "GoCD logo" %> icon.</em>
    </p>

    <% plugin_categories = [
      {kind: "Package repository plugins", version_info: ">= GoCD v13.3", plugins: data.repo_plugins},
      {kind: "Task plugins", version_info: ">= GoCD v14.1", plugins: data.task_plugins},
      {kind: "Notification plugins", plugins: data.notification_plugins},
      {kind: "SCM plugins", plugins: data.scm_plugins},
      {kind: "Authentication plugins", plugins: data.auth_plugins},
      {kind: "Elastic agents plugins", version_info: ">= GoCD v16.8", plugins: data.elastic_agent_plugins},
      {kind: "Configuration Repository", version_info: ">= GoCD v16.7", plugins: data.config_repo_plugins}
    ] %>
    <div class="v-tabs all-plugins">
      <ul class="tabs">
        <% plugin_categories.each_with_index do |category, index| %>
          <li rel="tab<%= index + 1 %>">
            <%= category[:kind] %> <% if category[:version_info] %><span class="plugin-info"><%= category[:version_info] %></span><% end %>
          </li>
        <% end %>
      </ul>

      <div class="tab_container">
        <% plugin_categories.each_with_index do |category, index| %>
          <% tab_id = "tab#{index + 1}" %>
          <h3 class="tab-accordion_heading" rel="<%= tab_id %>">
            <%= category[:kind] %> <% if category[:version_info] %><span class="plugin-info"><%= category[:version_info] %></span><% end %>
          </h3>

          <div id="<%= tab_id %>" class="tab_content">
            <div class="plugins-container">
              <ul class="plugins-list">

                <% category[:plugins].each do |p| %>
                  <li>
                    <span class="logo"></span>
                    <div class="details">
                      <%= image_tag "go-logo-small.png" , :class => "go-logo", :alt => "GoCD logo" if p.bundled %>
                      <h5 class="name"> <%= escape_html(p.name) %> </h5>
                      <p class="more-details">
                        <%= escape_html(p.description) %>
                        <%= link_to('Read more', p.readmore_url) %>
                      </p>
                      <span class="created-by">by
                        <%= link_to(escape_html(p.author_name), p.author_url)  %>
                      </span>
                    </div>
                    <div class="actions">
                      <% if p.bundled %>
                        <span class="with-go">Bundled with GoCD</span>
                      <% else %>
                        <div class="download-plugin">
                          <i class="fa fa-download"></i>
                          <%= link_to('Download', p.releases_url) %>
                        </div>
                      <% end %>
                    </div>
                  </li>
                <% end %>

                <li class=" contribute_tile">
                  <div class="contribute-plugin">

                    <i class="fa fa-star"></i>
                    <h5>Want to contribute?</h5>
                    <a href="https://developer.go.cd/current/writing_go_plugins/overview.html">Write a plugin</a>
                  </div>
                </li>
              </ul>
            </div>
          </div>
        <% end %>
      </div>
    </div>

    <div class="row plugin-content">
      <div class="col-md-12">
        <p class="note">
          <strong>Note:</strong> Plugins for GoCD are distributed under license from the copyright holder. In addition,
          notwithstanding who the copyright holder is, all plugins on this page are made available for download “as is
          and as available” without support or warranties of any kind, either express or implied, including but not
          limited to the implied warranties of merchantability, satisfactory quality, and fitness for a particular
          purpose.
        </p>
      </div>
    </div>
  </div>
</main>

<script>
 jQuery(document).ready(function($) {
   startTabContainer($);
 });
</script>
